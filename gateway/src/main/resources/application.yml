server:
  port: 8082
spring:
  application:
    name: gateway-application
  config:
    import: consul:localhost:8500
  cloud:
    consul:
      enabled: true
    gateway:
      routes:
        - id: accounts
          uri: "lb://${accounts-service-name}"
          predicates:
            - Path=/account-service/**
          filters:
            - TokenRelay=gateway-client
            - RewritePath=/account-service/?(?<segment>.*), /$\{segment}
  security:
    oauth2:
      client:
        provider:
          keycloak:
#            issuer-uri: ${keycloak_url:http://localhost:8084/realms/bank}
            token-uri: ${keycloak_url:http://localhost:8084/realms/bank}/protocol/openid-connect/token
#            authorization-uri: ${keycloak_url:http://localhost:8084/realms/bank}/protocol/openid-connect/auth
#            token-uri: ${keycloak_url:http://localhost:8084/realms/bank}/protocol/openid-connect/token
#            user-info-uri: ${keycloak_url:http://localhost:8084/realms/bank}/protocol/openid-connect/userinfo
#            user-name-attribute: sub
#            jwk-set-uri: ${keycloak_url:http://localhost:8084/realms/bank}/protocol/openid-connect/certs
        registration:
          gateway-client:
            provider: keycloak
            client-id: gateway_client_id
            client-secret: 8jRYUyFquHKqenM8Edatj090NUE4ArIG
            scope: accounts.read, accounts.write
            authorization-grant-type: client_credentials
#            redirect-uri: '{baseUrl}/{action}/oauth2/code/{registrationId}'
#            clientAuthenticationMethod: client_secret_post
management:
  endpoints:
    web:
      exposure:
        include: health, info
  endpoint:
    info:
      show-details: always
    health:
      show-details: always
      probes:
        enabled: true
logging:
  level:
    org:
      springframework: TRACE